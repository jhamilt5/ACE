# This compose file uses two containers built from the NIST-ACE repository. Run the following commands prior
# to starting the docker compose deployment.
#
# docker build -t datamachines/nist-ace .
#
# cd lang/python/examples/analytics/opencv_object_detector && docker build -t ocv-ssd .


version: "2"
services:
  # ACE SERVICES
  ace:
    image: datamachines/nist-ace:0.1
    restart: always
    command:
      - "tail" 
      - "-f" 
      - "/dev/null"

  camera_stream:
    image: datamachines/nist-ace:0.1
    restart: always
    devices: 
      - /dev/video0
    ports:
      - "8554:8554"
    command:
      - "python3"
      - "-m"
      - "ace"
      - "serve"
      - "rtsp"
      - "--src=0" 
      - "--endpoint=test"

  object_detector:
    image: ocv-ssd:0.1
    restart: always
    ports:
      - "3000:3000"
    command:    
      - "--verbose"

  object_detector_grpc:
    image: ocv-ssd:0.1
    restart: always
    ports:
      - "50051:50051"
    command:
      - "--verbose"
      - "--grpc"
  
  grpc_analytic_proxy:
    image: datamachines/nist-ace:0.1
    restart: always
    ports:
      - "3001:3000"
    command:
      - python 
      - -m 
      - ace 
      - serve 
      - proxy 
      - --analytic_addr 
      - object_detector_grpc:50051

  # KAFKA SERVICES
  kafka_zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka_broker:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka_zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: kafka_zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka_broker:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

# DATABASE AND GRAFANA VISUALIZATION SERVICES
  influxdb:
    image: influxdb:1.7
    restart: always
    ports:
        - "8086:8086"
    volumes:
        - influxdb-storage:/var/lib/influxdb
    environment:
        INFLUXDB_DB: ace
  grafana:
    image: grafana/grafana
    restart: always
    ports:
        - "8088:3000"
    depends_on:
        - influxdb
    volumes:
        - grafana-storage:/var/lib/grafana
  



volumes:
  grafana-storage:
    external: true
  influxdb-storage:
    external: true
